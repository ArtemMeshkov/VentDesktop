<Window x:Class="BMC.MainWindow"
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="clr-namespace:BMC.View"
        xmlns:local="clr-namespace:BMC.ViewModel"
        xmlns:mainroot="clr-namespace:BMC"
        mc:Ignorable="d"
           WindowStyle="None"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        x:Name="AppWindow"
        MinWidth="{Binding WindowMinimumWidth}"
        MinHeight="{Binding WindowMinimumHeight}"
        Title="Ну, здравствуй!" Height="1080" Width="1920" >

    <Window.Resources>
        <Style TargetType="{x:Type mainroot:MainWindow}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <!-- Outer border with the dropshadow margin -->
                        <Border Padding="{Binding OuterMarginSizeThickness, FallbackValue=0}">

                            <!-- Main window outline -->
                            <Grid>

                                <!-- Opacity mask for corners on grid -->
                                <Border x:Name="Container"
                                        Background="{StaticResource BackgroundLightBrush}"
                                        CornerRadius="{Binding WindowCornerRadius, FallbackValue=0}" />

                                <!-- Window border and dropshadown -->
                                <Border CornerRadius="{Binding WindowCornerRadius, FallbackValue=0}"
                                    Background="{Binding ForegroundLightBrush, FallbackValue=White}">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0" Opacity="0.2" />
                                    </Border.Effect>
                                </Border>

                                <!-- The main window content -->
                                <Grid>

                                    <!-- Corner clipping -->
                                    <Grid.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=Container}" />
                                    </Grid.OpacityMask>

                                    <Grid.RowDefinitions>

                                        <!-- Title Bar -->
                                        <RowDefinition Height="{Binding TitleHeightGridLength, FallbackValue=42}" />
                                        <!-- Drop shadow -->
                                        <RowDefinition Height="Auto" />
                                        <!-- Window Content -->
                                        <RowDefinition Height="*" />

                                    </Grid.RowDefinitions>

                                    <!-- Title Bar -->
                                    <Grid Grid.Column="0" Panel.ZIndex="1">

                                        <Grid.ColumnDefinitions>
                                            <!-- Icon -->
                                            <!-- Title -->
                                            <ColumnDefinition Width="*" />
                                            <!-- Windows Button -->
                                            <ColumnDefinition Width="Auto" />

                                        </Grid.ColumnDefinitions>

                                        <!-- Title -->
                                        <Viewbox Grid.Column="0" Margin="0">
                                            <TextBlock Style="{StaticResource HeaderText}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title, FallbackValue='Ну, здавствуй!'}" />
                                        </Viewbox>

                                        <!-- Window Buttons -->
                                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                                            <Button Command="{Binding MinimizeCommand}" Style="{StaticResource WindowControlButton}" Content="_" />
                                            <Button Command="{Binding CloseCommand}" Style="{StaticResource WindowCloseButton}" Content="X" />
                                        </StackPanel>

                                    </Grid>

                                    <!-- Drop shadow -->
                                    <Border Grid.Row="1" Height="6" BorderThickness="0 0.2 0 0">
                                        <!-- Underline -->
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1, 0">
                                                <GradientStop Color="{StaticResource ForegroundLight}" Offset="0.0" />
                                                <GradientStop Color="{StaticResource ForegroundMain}" Offset="0.5" />
                                                <GradientStop Color="{StaticResource ForegroundLight}" Offset="1.0" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>

                                        <!-- Drop shadow -->
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0, 1">
                                                <GradientStop Color="{StaticResource BackgroundVeryLight}" Offset="0.0" />
                                                <GradientStop Color="{StaticResource ForegroundLight}" Offset="1.0" />
                                            </LinearGradientBrush>
                                        </Border.Background>

                                    </Border>

                                    <!-- Page Content -->
                                    <Border Grid.Row="2" Padding="{Binding InnerContentPadding}">
                                        <ContentPresenter Content="{TemplateBinding Content}" />
                                    </Border>

                                </Grid>

                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <StreamGeometry x:Key="Geometry">M0,36 L0,12 L64,12 L64,0 L100,24 L64,48 L64,36 Z</StreamGeometry>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Path Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Data="{StaticResource Geometry}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <Style x:Key="TriangleButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Content" Value="jasfhjasbfjas"/>
            <Setter Property="Template">
                
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Path Name="border" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" Data="{StaticResource Geometry}" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Content" Value="Добавить в шкаф"/>
        </Style>

        <DataTemplate x:Name="FullTemplate" DataType="{x:Type local:FullViewModel}">
            <views:Full/>
        </DataTemplate>
        <DataTemplate x:Name="HeaterSetTemplate" DataType="{x:Type local:HeaterViewModel}">
            <views:HeaterSetting/>
        </DataTemplate>
        <DataTemplate x:Name="CoolerSetTemplate" DataType="{x:Type local:CoolerViewModel}">
            <views:CoolerSetting/>
        </DataTemplate>
        <DataTemplate x:Name="LiquidSetTemplate" DataType="{x:Type local:LiquidViewModel}">
            <views:LiquidView/>
        </DataTemplate>
        <DataTemplate x:Name="ElectricalSetTemplate" DataType="{x:Type local:ElectricalViewModel}">
            <views:ElectricView/>
        </DataTemplate>
        <DataTemplate x:Name="HeatExchSetTemplate" DataType="{x:Type local:HeatExchangeViewModel}">
            <views:HeatExchangeView/>
        </DataTemplate>
        <DataTemplate x:Name="FilterSetTemplate" DataType="{x:Type local:FilterViewModel}">
            <views:FilterView/>
        </DataTemplate>
        <DataTemplate x:Name="GateSetTemplate" DataType="{x:Type local:GatesViewModel}">
            <views:GatesView/>
        </DataTemplate>
        <DataTemplate x:Name="RecircSetTemplate" DataType="{x:Type local:RecircViewModel}">
            <views:RecircView/>
        </DataTemplate>
        <DataTemplate x:Name="EmptyTemplate" DataType="{x:Type local:EmptyVM}">
            <views:EmptyView/>
        </DataTemplate>
        <DataTemplate x:Name="HumidTemplate" DataType="{x:Type local:HumidViewModel}">
            <views:HumidViewModel/>
        </DataTemplate>
        <DataTemplate x:Name="HoneyCombsTemplate" DataType="{x:Type local:HoneyCombs}">
            <views:HoneycombsView/>
        </DataTemplate>
        <DataTemplate x:Name="SteamTemplate" DataType="{x:Type local:SteamHumid}">
            <views:SteamView/>
        </DataTemplate>
        <DataTemplate x:Name="RotorTemplate" DataType="{x:Type local:RotorViewModel}">
            <views:RotorView/>
        </DataTemplate>
        <DataTemplate x:Name="GlycolTemplate" DataType="{x:Type local:GlycolViewModel}">
            <views:GlycolicView/>
        </DataTemplate>
        <DataTemplate x:Name="PlateTemplate" DataType="{x:Type local:PlateViewModel}">
            <views:PlateView/>
        </DataTemplate>
        <DataTemplate x:Name="PlateBypassTemplate" DataType="{x:Type local:PlateWithBypassViewModel}">
            <views:PlateBypassView/>
        </DataTemplate>
        <DataTemplate x:Name="SettingTemplate" DataType="{x:Type local:SettingViewModel}">
            <views:SettingView/>
        </DataTemplate>
        <DataTemplate x:Name="VentSetTemplate" DataType="{x:Type local:VentSettingViewModel}">
            <views:VentSettingView/>
        </DataTemplate>
     
    </Window.Resources>



    <Grid >

        <Grid Margin="0,150,0,100">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.5*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <Label Grid.Row="0"  Content="Тип вентиляции:" HorizontalContentAlignment="Center" FontSize="18" FontWeight="Bold" />
            <RadioButton x:Name="Forced" Grid.Row="1"  Content="Приточная" GroupName="VentTypes" IsChecked="{Binding ForcedIsChecked}"
                                Command="{Binding ChangePageCommand}"
                                CommandParameter="{Binding PageViewModels[1] }" IsEnabled="{Binding ForcedEnable}"
                                Margin="20,20,0,20" MinHeight="50" FontSize="22"  >
                <RadioButton.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FF21C121" Offset="0.393"/>
                        <GradientStop Color="#FF87D89D" Offset="1"/>
                    </LinearGradientBrush>
                </RadioButton.Background>
            </RadioButton>
            <RadioButton x:Name="Exhausted" Grid.Row="2"  Content="Вытяжная" GroupName="VentTypes" IsChecked="{Binding ExhaustedIsChecked}"
                                Command="{Binding ChangePageCommand}"
                                CommandParameter="{Binding PageViewModels[1] }" IsEnabled="{Binding ExhaustedEnable}"
                                 Margin="20,20,0,20" MinHeight="50" FontSize="22"  >
                <RadioButton.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FF21C121" Offset="0.393"/>
                        <GradientStop Color="#FF87D89D" Offset="1"/>
                    </LinearGradientBrush>
                </RadioButton.Background>
            </RadioButton>
            <RadioButton x:Name="Full" Grid.Row="3" Content="Приточно-вытяжная" GroupName="VentTypes" IsChecked="{Binding FullIsChecked}"
                                Command="{Binding ChangePageCommand}"
                                CommandParameter="{Binding PageViewModels[1] }" IsEnabled="{Binding FullEnable}"
                                Margin="20,20,0,20" MinHeight="50" FontSize="22"  >
                <RadioButton.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FF21C121" Offset="0.393"/>
                        <GradientStop Color="#FF87D89D" Offset="1"/>
                    </LinearGradientBrush>
                </RadioButton.Background>
            </RadioButton>

        </Grid>
        <ContentPresenter Grid.Row="1" Grid.ColumnSpan="4" Content="{Binding CurrentPageViewModel, Mode=TwoWay}"/>
        <ContentPresenter Grid.Column="1" Content="{Binding CurrentPageViewSettingsModel, Mode=TwoWay}"/>
        <Button Content="Сброс" Command="{Binding GetAnotherOne}" HorizontalAlignment="Left"  VerticalAlignment="Bottom" Width="185" Height="67" Click="ResetClick" />
       

        
        <StackPanel Grid.Column="2" Orientation="Horizontal">                                                                                        <!--окно конечного вывода-->
            <StackPanel.DataContext>
                <local:ListsOfShields/>
            </StackPanel.DataContext>
            
            <StackPanel>
                <Label Content="Окно созданных систем" HorizontalAlignment="Center" Margin="0,15,0,0" FontSize="18" FontWeight="Bold"/>
                <ListBox x:Name="listBox" ItemsSource="{Binding ShieldLists}" MinHeight="250" MinWidth="300" MaxHeight="250" Margin="60" SelectedItem="{Binding SelectedShield}" 
                         ScrollViewer.VerticalScrollBarVisibility="Auto">
                   
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"></TextBlock>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <StackPanel Orientation="Horizontal">
                    <StackPanel Margin="15,0">
                        <Label x:Name="label" Content="Введите название системы" Grid.Column="3" HorizontalAlignment="Left"  VerticalAlignment="Top" FontSize="14" MinWidth="230"/>
                        <TextBox x:Name="textBox" Text="{Binding SystemName,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  MinHeight="25"/>
                    </StackPanel>
                  
                    <StackPanel>
                        <Button Content="Добавить новую систему" Command="{Binding AddItemCommand}" Margin="25,5" MinHeight="25">
                           
                        </Button>
                        <Button Content="Показать информацию" Command="{Binding GetInfo}" Margin="25,5" MinHeight="25">
                            
                        </Button>
                    </StackPanel>
                    
                    
                </StackPanel>
                


            </StackPanel>
            <Button Height="48" Width="120" Command="{Binding AddToListCommand}"   Style="{StaticResource TriangleButtonStyle}"  Margin="0,50,0,369"  >
                <TextBox HorizontalAlignment="Center" VerticalAlignment="Center">Добавить в шкаф</TextBox>
            </Button>
            <StackPanel>
                <Label Content="Окно формирования шкафа" HorizontalAlignment="Center" Margin="0,15,0,0" FontSize="18" FontWeight="Bold"/>
                <ListBox x:Name="listBox11" ItemsSource="{Binding NewShieldList}" SelectedIndex="{Binding SelectedIndexNew}" MinHeight="250" MaxHeight="250" Margin="60" MinWidth="300"
                         ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path= Name}" Margin="10 0"></TextBlock>
                            <TextBlock Text="{Binding Path= Number}" Margin="10 0"></TextBlock>
                              </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <StackPanel Orientation="Horizontal" Margin="10,0">
                    <Button x:Name="button" Command ="{Binding GetFullControl}" Content="Получить полную информацию" Margin="25,0">
                    </Button>
                    <Button x:Name="button_Copy" Command ="{Binding DeleteShield}" Content="Удалить выбранную систему" Margin="25,0" MinHeight="45">
                    </Button>
                </StackPanel>
            </StackPanel>
            
        </StackPanel>
        
        

        <Grid.RowDefinitions>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="6*"/>
            



        </Grid.ColumnDefinitions>

    </Grid>
</Window>
